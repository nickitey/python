# Напишите программу, которая считывает список чисел lst из первой строки и число x из второй строки,
# которая выводит все позиции, на которых встречается число x в переданном списке lst.
# Позиции нумеруются с нуля, если число x не встречается в списке, вывести строку "Отсутствует"
# (без кавычек, с большой буквы). Позиции должны быть выведены в одну строку, по возрастанию абсолютного значения.

# Sample Input 1:
# 5 8 2 7 8 8 2 4
# 8
# Sample Output 1:
# 1 4 5

# Sample Input 2:
# 5 8 2 7 8 8 2 4
# 10
# Sample Output 2:
# Отсутствует

# put your python code here

def get_indexes_in_list(lst, x):
    """
    Функция принимает два аргумента: список и число, если число встречается в списке, функция возвращает строку
    с индексами числа в списке, если нет, то функция возвращает строку "Отсутствует"
    """
    result = []
    for i in range(len(lst)):
        if lst[i] == x:
            result.append(i)
    if len(result) != 0:
        return ' '.join(str(elem) for elem in result)
    else:
        return 'Отсутствует'


# print(get_indexes_in_list.__doc__)

assert get_indexes_in_list([5, 8, 2, 7, 8, 8, 2, 4], 8) == '1 4 5'
assert get_indexes_in_list([5, 8, 2, 7, 8, 8, 2, 4], 10) == 'Отсутствует'
assert get_indexes_in_list([1, 5, 657, 75468, -103574, 667744132, 655712, -21575241547, 1547675465135, 15795451324,
                            654579854, 5478413, -654678513277, -54657321357, 0, 56765435216587, -587435643547234,
                            -54654321574, 54567244, 548723157, -654857231, -5465732432, -54557454, 5486795413247,
                            534579879414, -54547654361445374, 654676514323765, -546547321, 0, -4565743513247,
                            21657465432, -65654354, 95846541327, -5465743241, 6579876413274, -6579684321357,
                            54658751327, 5476873243247, -54156343214321, 0], 0) == '14 28 39'
assert get_indexes_in_list([], 8) == 'Отсутствует'
assert (get_indexes_in_list([0, -6513837502, -6749895283, 7445558759, 184472, -9879515776, 3914810596, 0, -2214677073,
                            -2160340972, 6430778213, 0, -2418474954, 8922977918, -5842760926, -1762860162, 0,
                            -7266430024, 8568565368, 0, 8843785660, 0, 8487801351, -5873650222, -7227165668, 0,
                            3938349325, 1076550697, 2475352571, -2518012767, 0, 7892036705, -5655666059, 5489006102,
                            -7686794022, 3282365794, 1890946868, -8240868698, 0, 8432594065, 0, 2559655531, 6654342722,
                            -5184275527, 0, -1607737600, -9416300009, 2313742864, 0, -2964730828, 0, 3741468605,
                            -8218635166, -57493369, 0, 8976979875, -1577892382, 3564716342, 0, -7839134071, 0,
                            6129972865, -2352605447, -6999994223, 0, -8573674269, 1153610261, -246679983, 0,
                            -1955175697, 0, -5665810023, 1877320733, 7222068306, 0, 9592592248, -5179113686,
                            -9873557541, 0, 4547553389, 0, -1610850241, -6210250725, -8299667751, 0, 7929935863,
                            -8321387529, 2849466052, 0, -1442352569, 0, -8518361052, 669837117, -78155256, 0,
                            -3923554142, -4777075689, -7062852079, 0, -2108631420, 0, -2859397319, -6915778700,
                            4013812917, 0, -6091888545, 556676204, 952703047, 0, 4564622048, 0, 3235498746, 1410023472,
                            -6323404608, 0, 7723042921, -4601230221, -150191281, 0, -70553801, -9872313034, 8404705748,
                            9974980089, 0, -6654464620, -3174247027, -7734260344, 0, -3439908883, 0, 3618635884,
                            -6125116849, 7810101029, 0, 8075751493, -3051199220, 321114271], 0) ==
        ('0 7 11 16 19 21 25 30 38 40 44 48 50 54 58 60 64 68 70 74 78 80 84 88 90 94 98 100 104 108 110 114 118 123 '
         '127 129 133'))

print('All tests passed :)')