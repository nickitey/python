# Группа биологов в институте биоинформатики завела себе черепашку.
# После дрессировки черепашка научилась понимать и запоминать указания биологов следующего вида:
# север 10
# запад 20
# юг 30
# восток 40
# где первое слово — это направление, в котором должна двигаться черепашка, а число после слова — это положительное
# расстояние в сантиметрах, которое должна пройти черепашка.
# Но команды даются быстро, а черепашка ползёт медленно, и программисты догадались, что можно написать программу,
# которая определит, куда в итоге биологи приведут черепашку. Для этого программисты просят вас написать программу,
# которая выведет точку, в которой окажется черепашка после всех команд. Для простоты они решили считать, что движение
# начинается в точке (0, 0), и движение на восток увеличивает первую координату, а на север — вторую.
# Программе подаётся на вход число команд n, которые нужно выполнить черепашке, после чего n строк с самими командами.
# Вывести нужно два числа в одну строку: первую и вторую координату конечной точки черепашки.
# Все координаты целочисленные.

# Sample Input:
# 4
# север 10
# запад 20
# юг 30
# восток 40
# Sample Output:
# 20 -20


"""
length = int(input())
directions = []
while len(directions) < length:
    direction = input()
    directions.append(direction.split(' '))
"""
directions = [['север', '10'], ['запад', '20'], ['юг', '30'], ['восток', '40']]


def move_the_turtle(directions):
    coordinates = [0, 0]
    for direction in directions:
        for index in range(2):
            if direction[index] == 'север':
                coordinates[1] += int(direction[index + 1])
            elif direction[index] == 'юг':
                coordinates[1] -= int(direction[index + 1])
            elif direction[index] == 'запад':
                coordinates[0] -= int(direction[index + 1])
            elif direction[index] == 'восток':
                coordinates[0] += int(direction[index + 1])
    return coordinates


assert move_the_turtle(directions) == [20, -20]

print('TEST IS PASSED')